buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
//        classpath "com.google.cloud.tools:appengine-gradle-plugin:$appengine_plugin_version"
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'kotlin'
apply plugin: 'application'
//apply plugin: 'war'
//apply plugin: 'com.google.cloud.tools.appengine'

group 'com.mastertechsoftware'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'https://kotlin.bintray.com/kotlin-js-wrappers' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-html-builder:$ktor_version"
    compile "org.jetbrains:kotlin-css-jvm:1.0.0-pre.31-kotlin-1.2.41"
    compile "io.ktor:ktor-thymeleaf:$ktor_version"
    compile "io.ktor:ktor-server-host-common:$ktor_version"
    compile "io.ktor:ktor-locations:$ktor_version"
    compile "io.ktor:ktor-server-sessions:$ktor_version"
    compile "io.ktor:ktor-auth-jwt:$ktor_version"
    compile "io.ktor:ktor-gson:$ktor_version"
    compile "org.jetbrains.exposed:exposed-core:$exposed_version"
    compile "org.jetbrains.exposed:exposed-dao:$exposed_version"
    compile "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    compile "org.postgresql:postgresql:$postgres_version"
    compile "com.zaxxer:HikariCP:$hikaricp_version"
//    providedCompile "com.google.appengine:appengine:$appengine_version"

    testCompile "io.ktor:ktor-server-tests:$ktor_version"
}
//kotlin.experimental.coroutines = 'enable'

//task run(dependsOn: ['appengineRun'])

task stage(dependsOn: ['installDist'])

// This task will generate your fat JAR and put it in the ./build/libs/ directory
shadowJar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}